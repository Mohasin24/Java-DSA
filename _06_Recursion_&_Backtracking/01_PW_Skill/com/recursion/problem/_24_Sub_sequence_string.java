package com.recursion.problem;

/*
Problem Statement :
Given a string, write a method to return all its subsequences in an arraylist.
A string is a subsequence of a given String that is generated by deleting some character
of a given string without changing its order

Input : "abc"
Output : a, b, c, ab, bc, ac, abc
 */

import java.util.ArrayList;
import java.util.List;

public class _24_Sub_sequence_string
{
    public static void main(String[] args)
    {
        ArrayList<String> iRet = subSequence("abc");
        iRet.remove(""); // removes the empty string
        System.out.println(iRet);
    }

    // returns subsequences in the 2 to power n
    public static ArrayList<String> subSequence(String s)
    {
        ArrayList<String> ans = new ArrayList<>();

        if(s.length() == 0)
        {
            ans.add("");
            return ans;
        }

        char curr = s.charAt(0);

        ArrayList<String> smallAns = subSequence(s.substring(1));

        for(String x : smallAns)
        {
            ans.add(x);
            ans.add(curr+x);
        }

        return ans;
    }

}


